{"meta":{"title":"方立夏","subtitle":"方立夏の博客","description":"华南农业大学 | 电子信息科学与技术 | 全栈学习","author":"方立夏","url":"https://flxxue.github.io","root":"/"},"pages":[{"title":"","date":"2022-11-11T05:30:54.104Z","updated":"2022-11-10T08:13:12.051Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"https://flxxue.github.io/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2022-11-10T08:13:11.957Z","comments":true,"path":"404.html","permalink":"https://flxxue.github.io/404.html","excerpt":"","text":""},{"title":"","date":"2022-11-11T05:30:49.695Z","updated":"2022-11-10T08:13:12.053Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"https://flxxue.github.io/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"放松一下","date":"2019-08-10T08:41:10.000Z","updated":"2022-11-10T08:13:11.969Z","comments":true,"path":"List/index.html","permalink":"https://flxxue.github.io/List/index.html","excerpt":"","text":"影音资源共享"},{"title":"about","date":"2019-10-24T16:00:00.000Z","updated":"2022-11-10T08:13:12.050Z","comments":true,"path":"about/index.html","permalink":"https://flxxue.github.io/about/index.html","excerpt":"","text":""},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2022-11-10T08:13:12.051Z","comments":true,"path":"archives/index.html","permalink":"https://flxxue.github.io/archives/index.html","excerpt":"","text":""},{"title":"留言板","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-10T09:29:43.301Z","comments":true,"path":"contact/index.html","permalink":"https://flxxue.github.io/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 Luckeyの友链信息 博客名称: 方立夏の博客 博客网址: https://flxxue.github.io/ 博客介绍: 希望对这份东西的热爱能一直下去"},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2022-11-10T08:13:12.052Z","comments":true,"path":"categories/index.html","permalink":"https://flxxue.github.io/categories/index.html","excerpt":"","text":""},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2022-11-10T08:13:12.052Z","comments":true,"path":"census/index.html","permalink":"https://flxxue.github.io/census/index.html","excerpt":"","text":""},{"title":"友链","date":"2019-07-19T08:42:10.000Z","updated":"2022-11-10T08:13:12.053Z","comments":true,"path":"friends/index.html","permalink":"https://flxxue.github.io/friends/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2019-07-19T08:40:27.000Z","updated":"2022-11-10T08:13:12.054Z","comments":true,"path":"resource/index.html","permalink":"https://flxxue.github.io/resource/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","updated":"2022-11-10T08:13:12.055Z","comments":true,"path":"tags/index.html","permalink":"https://flxxue.github.io/tags/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-11-10T08:13:11.963Z","updated":"2022-11-10T08:13:11.963Z","comments":true,"path":"List/galleries/index.html","permalink":"https://flxxue.github.io/List/galleries/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2022-11-10T08:13:11.970Z","comments":true,"path":"List/movies/index.html","permalink":"https://flxxue.github.io/List/movies/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-11-10T08:13:11.971Z","comments":true,"path":"List/music/index.html","permalink":"https://flxxue.github.io/List/music/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-11-10T08:13:11.971Z","comments":true,"path":"List/tools/index.html","permalink":"https://flxxue.github.io/List/tools/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2022-11-10T08:13:11.964Z","updated":"2022-11-10T08:13:11.964Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"https://flxxue.github.io/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2022-11-10T08:13:11.964Z","updated":"2022-11-10T08:13:11.964Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"https://flxxue.github.io/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2022-11-10T08:13:11.965Z","updated":"2022-11-10T08:13:11.965Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"https://flxxue.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2022-11-11T03:28:54.643Z","updated":"2022-11-10T08:13:11.965Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"https://flxxue.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2022-11-10T08:13:11.966Z","updated":"2022-11-10T08:13:11.966Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"https://flxxue.github.io/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2022-11-10T08:13:11.966Z","updated":"2022-11-10T08:13:11.966Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"https://flxxue.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2022-11-10T08:13:11.967Z","updated":"2022-11-10T08:13:11.967Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"https://flxxue.github.io/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2022-11-10T08:13:11.968Z","updated":"2022-11-10T08:13:11.968Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"https://flxxue.github.io/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2022-11-10T08:13:11.967Z","updated":"2022-11-10T08:13:11.967Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"https://flxxue.github.io/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2022-11-10T08:13:11.968Z","updated":"2022-11-10T08:13:11.968Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"https://flxxue.github.io/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2022-11-10T08:13:11.969Z","updated":"2022-11-10T08:13:11.969Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"https://flxxue.github.io/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2022-11-10T08:13:11.969Z","updated":"2022-11-10T08:13:11.969Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"https://flxxue.github.io/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""}],"posts":[{"title":"11月Java总结","slug":"11月份Java学习总结","date":"2022-12-02T11:31:14.108Z","updated":"2022-12-08T15:18:42.785Z","comments":true,"path":"posts/1.html","link":"","permalink":"https://flxxue.github.io/posts/1.html","excerpt":"","text":"11月份Java学习总结需要注意的点1 输入语句/*如何从键盘获取不同类型的变量，需要使用Scanner类 具体步骤：1.导包：import java.util.Scanner;2.Scanner的实例化;3.调用Scanner类的相关方法，来获取指定的变量。 import java.util.Scanner; class IFTest{ public static void main(String[] args){ //声明一个Scanner Scanner scan = new Scanner(System.in); int num = scan.nextInt(); System.out.println(num); } } 2switch-case 结构注意： switch结构中的表达式，只能是如下的六种数据类型之一：byte、short、char、int、枚举类型(JDK5.0)、String类型(JDK7.0) 不能是：long，float，double，boolean。 /*分支结构之二：switch-case 1.格式switch(表达式){case 常量1: 执行语句1; //break;case 常量2: 执行语句2; //break; … default: 执行语句n: //break;} 2.说明:① 根据switch表达式中的值，依次匹配各个case中的常量。一旦匹配成功，进入相应case结构中，执行相关语句。 当调用完执行语句后，则仍然继续向下执行其他case语句，直到遇到break关键字或末尾结束为止。 ② break, 可以使用switch-case结构中，表示一旦执行到此关键字，就跳出switch-case结构。 ③ switch结构中的表达式，只能是如下的六种数据类型之一：byte、short、char、int、枚举类型(JDK5.0)、String类型(JDK7.0)④ case 之后之能声明常量。不能声明范围。 ⑤ break关键字是可选的。⑥ default：相当于if-else结构中的else。 default 结构是可选的，而且位置是灵活的。 */ class SwitchTest{ public static void main(String[] args){ int number = 2; switch(number){ case 0: System.out.println(\"zero\"); break; case 1: System.out.println(\"one\"); break; case 2: System.out.println(\"twe\"); break; case 3: System.out.println(\"three\"); break; default: System.out.println(\"other\"); break; } //********************************* //运行报错，不能运行boolean类型 /* boolean isHandSome = true; switch(isHandSome){ case true: System.out.println(\"可乐吗？？\"); break; case false: System.out.println(\"薯条吗？？\"); break; default: System.out.println(\"输入有误！！！\"); } */ //********************************* String season= \"summer\"; switch(season) { case\"spring\": System.out.println(\"春暖花开\"); break; case\"summer\": System.out.println(\"夏日炎炎\"); break; case\"autumn\": System.out.println(\"秋高气爽\"); break; case\"winter\": System.out.println(\"冬雪皑皑\"); break; default: System.out.println(\"季节输入有误\"); break; } 3 嵌套循环/*嵌套循环的使用1.嵌套循环：将一个循环结构A声明在另一个循环结构B的循环体中，就构成了嵌套循环 2.外层循环：循环结构B内层循环：循环结构A3.说明① 内层循环遍历一遍，只相当于外层循环循环体执行了一次② 假设外层循环需要执行m次，内层循环需要执行n次。此时内层循环的循环体一共执行了m * n次 4.技巧外层循环控制行数，内层循环控制列数 class ForForTest{ public static void main(String[] args) { //****** for(int i = 1;i &lt;= 6;i++){ System.out.print(\"*\"); } System.out.println();//换行 /* ****** ****** ****** ****** */ for(int i = 1;i &lt;= 4;i++){ for(int j = 1;j &lt;= 6;j++){ System.out.print('*'); } System.out.println(); //换行 } /* * ** *** **** ***** */ for(int i = 1;i &lt;= 5;i++){ //控制行数 for(int j = 1;j &lt;= i;j++){ //控制列数 System.out.print(\"*\"); } System.out.println(); } /* ***** **** *** ** * */ for(int i = 1;i &lt;= 6;i++){ for(int j = 1;j &lt;= 6-i;j++){ System.out.print(\"*\"); } System.out.println(); } /* * ** *** **** ***** **** *** ** * */ for(int i = 1;i &lt;= 5;i++){ for(int j = 1;j &lt;= i;j++){ System.out.print(\"*\"); } System.out.println(); } for(int i = 1;i &lt;= 5;i++){ for(int j = 1;j &lt;= 5-i;j++){ System.out.print(\"*\"); } System.out.println(); } //九九乘法表 for(int i = 1;i &lt;= 9;i++){ for(int j = 1;j &lt;= i;j++){ System.out.print(i + \"*\" + j + \"=\" + i*j + \" \"); } System.out.println(); //换行 } } 4 break continue1、break的使用 break语句用于终止某个语句块的执行break语句出现在多层嵌套的语句块中时，可以通过标签指明要终止的是哪一层语句块 2、continue的使用 continue 语句continue只能使用在循环结构中continue语句用于跳过其所在循环语句块的一次执行，继续下一次循环continue语句出现在多层嵌套的循环语句体中时，可以通过标签指明要跳过的是哪一层循环3、return的使用 return：并非专门用于结束循环的，它的功能是结束一个方法。当一个方法执行到一个return语句时，这个方法将被结束。与break和continue不同的是，return直接结束整个方法，不管这个return处于多少层循环之内。4、特殊流程控制语句说明 break只能用于switch语句和循环语句中。continue 只能用于循环语句中。二者功能类似，但continue是终止本次循环，break是终止本层循环。break、continue之后不能有其他的语句，因为程序永远不会执行其后的语句。标号语句必须紧接在循环的头部。标号语句不能用在非循环语句的前面。很多语言都有goto语句，goto语句可以随意将控制转移到程序中的任意一条语句上，然后执行它。但使程序容易出错。Java中的break和continue是不同于goto的。 /*break和countinue关键字的使用 使用范围 循环中使用的作用(不同点) 相同点break: switch-case 结束当前循环 关键字后面不能声明执行语句 循环结构中 countinue: 循环结构中 结束当次循环 关键字后面不能声明执行语句 */ class BreakContinueTest{ public static void main(String[] args){ for(int i = 1;i &lt;= 10;i++){ if(i % 4 == 0){ // break; //1、2、3 continue; //1、2、3、5、6、7、9、10 // System.out.println(\"该吃饭了！！！\"); } // System.out.println(i); } //******************************** for(int i = 1;i &lt;= 4;i++){ for(int j = 1;j &lt;= 10; j++){ if(i % 4 == 0){ // break; //默认跳出包裹此关键字最近的一层的循环 continue; } System.out.print(j); } System.out.println(); } } }","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://flxxue.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://flxxue.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://flxxue.github.io/tags/Github/"}]},{"title":"个人随笔","slug":"随笔","date":"2022-11-11T09:01:41.112Z","updated":"2022-11-11T09:06:41.710Z","comments":true,"path":"posts/0.html","link":"","permalink":"https://flxxue.github.io/posts/0.html","excerpt":"","text":"2022 11 11 经过两天的时间，用hexo与github搭建了一个个人博客，由于暂时还没学会服务器以及后端方面知识，也只是简答利用一些前端知识，以及一些npm组件去进行个性化编程，还有很多方面不足，后面会不断的进行改进 第二个再烁烁我搭建个人博客的目的：10月份，经过一段短暂实习，我接触到了数据库，一些后端知识。小一年的前端学习，其实以及到了一个瓶颈期。我想寻求突破。以往网络上面的前端项目很多。我想着通过后面的学习，我可以自己独立去开发一个app或者小程序，我可以自己写接口，渲染自己想写的数据。有了这个想法后，刚好碰上了广州疫情，图书馆半个月搞定了MySQL基础，也就是到11月10号。即将进入对Java的学习，同时也会一直跟MySQL高级篇的知识，谨以此博客来记录后端的学习过程，同时一些笔记，资料，也会同步上传。不希望知识3分钟热度，一个月发三篇博客吧，立个小flag。学习之路还很长，沉下心来，会有收货。","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://flxxue.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://flxxue.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://flxxue.github.io/tags/Github/"}]}],"categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://flxxue.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://flxxue.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://flxxue.github.io/tags/Github/"}]}